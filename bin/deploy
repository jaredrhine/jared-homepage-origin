#!/bin/bash

# Note:
# - script evolves as hosting config evolves
# - built around docker-based builds locally and remote podman hosting
# - prefer to use docker registry, but blocked by credential issues with private registry and podman and ssh

set -xe

SERVICE=jared-homepage-origin
REGISTRY=docker-registry.wordzoo.com:25000
PORT=8998
OLDVERSION=v27
VERSION=latest
TARBALL=$SERVICE.$VERSION.docker-image.tar
REMOTEHOST=vole

FULLTAG=$REGISTRY/$SERVICE:$VERSION

# TODO: Jeez, just get an image registry already

# Rerun the build of the web app
cd /home/jared/work/home/jared-homepage-vue/homeapp
npm run build

# Refresh the local copy of the static file build, since Dockerfile
# can't copy from outside the build context. This is the
# cheap-and-easy way to handle that issue, by copying them here.
cd /home/jared/work/home/jared-homepage-origin
rm -rf site
mkdir site
cp -a /home/jared/work/home/jared-homepage-vue/homeapp/dist/* site/

# Build docker container
docker buildx build -t $FULLTAG .

# Create a file copy of this container
docker save -o $TARBALL $SERVICE:$VERSION

# Stop previous container
ssh vole podman stop $SERVICE || true
ssh vole podman rm $SERVICE || true

# Copy the image
scp $TARBALL $REMOTEHOST:/var/tmp

# Load the image
ssh $REMOTEHOST podman image load -i /var/tmp/$TARBALL

# Create and start the container
CONTAINER=$(ssh $REMOTEHOST podman container create --name $SERVICE -p $PORT:80 $SERVICE:$VERSION)
ssh $REMOTEHOST podman start $CONTAINER

# Remove the docker build artifact
rm -f $TARBALL

exit

# Push to private docker repository
docker push $FULLTAG

#ssh $REMOTEHOST podman 

exit

# Create a file copy of this container
docker save -o $TARBALL $SERVICE:$VERSION

# Stop previous container
docker -H ssh://mongoose stop $SERVICE
docker -H ssh://mongoose rm $SERVICE

# Load the image
docker -H ssh://mongoose image load -i $TARBALL

# Create and start the container
CONTAINER=$(docker -H ssh://mongoose container create --name $SERVICE -p $PORT:80 $SERVICE:$VERSION)
docker -H ssh://mongoose start $CONTAINER

# Remove the docker build artifact
rm -f $TARBALL
